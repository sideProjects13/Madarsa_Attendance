# .github/workflows/firebase_distribution.yml

name: Build and Distribute to Firebase

# Controls when the action will run. 
# This workflow runs on a push to the 'main' branch.
# It can also be triggered manually from the Actions tab.
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-distribute:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # 1. Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Sets up JDK 17, which is required for modern Android builds
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      # 3. Grants execute permission for gradlew, which is needed on Linux runners
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4. Builds a release APK. You can change this to 'bundleRelease' to build an AAB
      - name: Build with Gradle
        run: ./gradlew assembleRelease

      # 5. Authenticates with Google Cloud using the Service Account key
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CREDENTIALS }}

      # 6. Uploads the artifact (APK) to Firebase App Distribution
      - name: Upload artifact to Firebase App Distribution
        run: |
          # Install Firebase CLI
          npm install -g firebase-tools
          
          # Distribute the APK
          firebase appdistribution:distribute app/build/outputs/apk/release/app-release-unsigned.apk \
            --app "${{ secrets.FIREBASE_APP_ID }}" \
            --release-notes "Build from commit ${{ github.sha }}" \
            --groups "qa-testers"